openapi: 3.0.3
info:
  title: BAM
  description: Bank Account Management API;
  version: "1"

servers:
  - url: http://localhost:8080/api/v1/

tags:
  - name: Customers
    description: Contains API for functionality profromed by Customers.
  - name: Employees
    description: Contains API for Employees

paths:
  /customers/fund-transfer:
    post:
      tags:
        - Customers
      description: Fund Transfer API.
      operationId: customerFundTransfer
      parameters:
        - $ref: '#/components/parameters/customerId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundTransferRequest'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundTransferResponse'
  /customers/payees:
    get:
      tags:
        - Customers
      description: Get the Register Payee of the customers.
      operationId: customersGetPayees
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayeeResponse'
    post:
      tags:
        - Customers
      description: Get the Register Payee of the customers.
      operationId: customersAddPayee
      parameters:
        - $ref: '#/components/parameters/customerId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayeeRequest'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayeeResponse'

  /customers/available-balance:
    get:
      tags:
        - Customers
      description: Get the Available Balance of the customers.
      operationId: customersGetBalance
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceDetails'
  /customers/account-summary:
    get:
      tags:
        - Customers
      description: Get the Available Balance of the customers.
      operationId: customersGetAccountSummary
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSummary'
  /employees/create-account:
    post:
      tags:
        - Employees
      description: Account Creation API.
      operationId: employeeAccountCreate
      parameters:
        - $ref: '#/components/parameters/employeeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
  /employee/manage-account:
    put:
      tags:
        - Employees
      description: Account Updation API.
      operationId: employeeAccountUpdate
      parameters:
        - $ref: '#/components/parameters/employeeId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountResponse'
components:
  parameters:
    customerId:
      in: header
      name: customerId
      required: true
      schema:
        type: string
        description: Bank Customer Id
    employeeId:
      in: header
      name: employeeId
      required: true
      schema:
        type: string
        description: Bank Employee Id
  schemas:
    RestError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
          description: The message for the client
    ResponseMeta:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: The code associated with the successful operation.
        message:
          type: string
          description: The message for the client
    BalanceDetails:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/BalanceDetailsData'
      required:
        - meta
        - data
    BalanceDetailsData:
      type: object
      properties:
        customerId:
          type: string
        availableBalance:
          type: string
    FundTransferRequest:
      type: object
      properties:
        payeeId:
          type: string
        amount:
          type: integer
          format: int64
    FundTransferResponse:
      type: object
      properties:
        transactionRefNumber:
          type: string
    PayeeResponse:
      type: object
      properties:
        payeeId:
          type: string
        payeeName:
          type: string
    PayeeRequest:
      type: object
      properties:
        payeeId:
          type: string
    AccountSummary:
      type: object
      properties:
        transactionId:
          type: string
        transactionDate:
          type: string
          format: date
        transactionStatus:
          type: string
        transactionAmount:
          type: integer
          format: int64
    CreateAccountRequest:
      type: object
      properties:
        customerFirstName:
          type: string
        customerMiddleName:
          type: string
        customerLastName:
          type: string
        openingBalance:
          type: integer
          format: int64
        customerGovId:
          type: string
        customerGovIdType:
          type: string
        customerStreet:
          type: string
        customerCity:
          type: string
        customerCountry:
          type: string
        customerMobNumber:
          type: string
    CreateAccountResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/CreateAccountData'
      required:
        - meta
        - data
    CreateAccountData:
      type: object
      properties:
        customerId:
          type: string
    UpdateAccountRequest:
      type: object
      properties:
        customerId:
          type: string
        addFund:
          type: string
        updateStatus:
          type: boolean
    UpdateAccountResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/UpdateAccountData'
      required:
        - meta
        - data
    UpdateAccountData:
      type: object
      properties:
        customerId:
          type: string
        balance:
          type: string
        status:
          type: string
